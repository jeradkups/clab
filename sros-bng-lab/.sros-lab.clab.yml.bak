name: sros-lab01

mgmt:
  network: mgmt
  ipv4-subnet: 172.80.80.0/24

topology:
  kinds:
    nokia_sros:
      image: jeradkups/vr-sros:23.07.R2
      license: license-sros.txt
  nodes:
    bng1:
      kind: nokia_sros
      startup-config: CONFIGS/config-bng1.txt
      type: sr-1
      mgmt-ipv4: 172.80.80.51

    bng2:
      kind: nokia_sros
      startup-config: CONFIGS/config-bng2.txt        
      type: sr-1
      mgmt-ipv4: 172.80.80.52

    agg1:
      kind: nokia_sros
      startup-config: CONFIGS/config-agg1.txt        
      type: sr-1
      mgmt-ipv4: 172.80.80.21

    agg2:
      kind: nokia_sros
      startup-config: CONFIGS/config-agg2.txt      
      type: ixr-r6
      mgmt-ipv4: 172.80.80.22

    agg3:
      kind: nokia_sros
      startup-config: CONFIGS/config-agg3.txt        
      type: ixr-r6
      mgmt-ipv4: 172.80.80.23

    ### CLIENTS ###
    client1:
      kind: linux
      image: jeradkups/freeradius-server:1.2
      mgmt-ipv4: 172.80.80.31
      stages:
        create:
          wait-for:
            - node: bng1
              stage: healthy
            - node: bng2
              stage: healthy
      binds:
        - CLIENT_CFG/client1/authorize:/etc/freeradius/3.0/mods-config/files/authorize
      exec:
        - apt install vlan
        #- ip link add link eth1 name eth1.10 type vlan id 10
        - ip address add 10.10.1.2/30 dev eth1
        - ip link set dev eth1 up
        - ip route add 1.0.0.0/8 via 10.10.1.1
        - freeradius &

    client2:
      kind: linux
      image: jeradkups/bng-host:1.0
      mgmt-ipv4: 172.80.80.32
      stages:
        create:
          wait-for:
            - node: bng1
              stage: healthy
            - node: bng2
              stage: healthy
      binds:
        - CLIENT_CFG/client2/dhcp.json:/root/dhcp.json
      exec:
        - apt install vlan
        #- ip link add link eth1 name eth1.10 type vlan id 10

    ### TELEMETRY STACK ###
    gnmic:
      kind: linux
      mgmt-ipv4: 172.80.80.41
      image: ghcr.io/openconfig/gnmic:latest
      binds:
        - gnmic-config.yml:/gnmic-config.yml:ro
      cmd: --config /gnmic-config.yml --log subscribe
      group: "10" # group 10 is assigned to the nodes of a telemetry stack

    prometheus:
      kind: linux
      mgmt-ipv4: 172.80.80.42
      image: prom/prometheus:latest
      binds:
        - TELEMETRY_CONFIGS/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      cmd: --config.file=/etc/prometheus/prometheus.yml
      ports:
        - 9090:9090
      group: "10"

    grafana:
      kind: linux
      mgmt-ipv4: 172.80.80.43
      image: grafana/grafana:latest
      binds:
        - TELEMETRY_CONFIGS/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml:ro
        - TELEMETRY_CONFIGS/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yaml:ro
        - TELEMETRY_CONFIGS/grafana/dashboards:/var/lib/grafana/dashboards
        - TELEMETRY_CONFIGS/grafana/grafana-flowcharting:/var/lib/grafana/plugins/grafana-flowcharting
      ports:
        - 3000:3000
      group: "10"


  links:
    #bng crosslinks
    - endpoints: ["bng1:eth1", "bng2:eth1"]
    #aggregation links:
    - endpoints: ["bng1:eth2", "agg1:eth1"]
    - endpoints: ["bng2:eth2", "agg1:eth2"]
    - endpoints: ["agg1:eth3", "agg2:eth1"]
    #core links
    - endpoints: ["bng1:eth3", "agg3:eth2"]
    - endpoints: ["bng2:eth3", "agg3:eth3"]
    #radius server
    - endpoints: ["client1:eth1", "agg3:eth1"]
    #bng-tester
    - endpoints: ["client2:eth1", "agg2:eth2"]
    - endpoints: ["client2:eth2", "agg3:eth4"]
